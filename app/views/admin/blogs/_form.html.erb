<%= form_with(model: [:admin, blog]) do |f| %>
  <% if blog.errors.any? %>
    <div class="card mb-3 exception-card">
      <div class="card-body">
        <ul class='m-0 p-0'>
          <% blog.errors.each do |error| %>
            <li class="list-unstyled"><%= error.full_message %></li>
          <% end %>
        </ul>
      </div>
    </div>
  <% end %>

  <div class="mb-3">
    <%= f.label :title, class: 'form-label' %>
    <%= f.text_field :title, class: 'form-control', placeholder: 'ブログのタイトル', disabled: disabled %>
  </div>
  <div class="mb-3">
    <%= tag.p 'thumbnail', class: "text-reset mb-2" %>
    <%= f.label :thumbnail do %>
      <%= tag.div class: 'img_wrap' do %>
        <%= image_tag blog.thumbnail_url, id: 'thumbnail_preview', class: 'img-fluid', style: 'display: block' %>
      <% end %>
      <%= f.file_field :thumbnail, class: 'form-control', style: 'display:none', onchange: "fileInputHandler(event, '#{BlogThumbnailUploader.default_url}')", disabled: disabled %>
      <%= f.hidden_field :thumbnail_cache %>
      <%= tag.span blog.thumbnail.identifier || 'No Image', id: 'thumbnail_preview_name', class: 'text-secondary' %>
    <% end %>
  </div>
  <div class="mb-3">
    <%= f.label :piece_title, class: 'form-label' %>
    <%= f.text_field :piece_title, class: 'form-control', placeholder: 'DVDのタイトル', disabled: disabled  %>
  </div>
  <div class="mb-3">
    <%= f.label :outline, class: 'form-label' %>
    <%= f.text_area :outline, class: 'form-control', placeholder: '概要', disabled: disabled %>
  </div>
  <div class="mb-3">
    <%= f.submit nil, class: 'btn btn-primary mx-2 px-4' if !disabled %>
    <% if action_name == 'show' %>
      <%= link_to 'Edit', edit_admin_blog_path(blog), class: 'btn btn-primary mx-2 px-4' %>
      <%= link_to 'Delete', admin_blog_path(blog), method: :delete, class: 'btn btn-outline-danger mx-2 px-4', data: {confirm: 'Are you sure?'} %>
    <% end %>
    <%= link_to 'Back', back_url, class: 'btn btn-secondary mx-2 px-4' %>
  </div>
<% end %>

<%= content_for :script do %>
  <script>
    const fileInputHandler = (e, default_url) => {
      console.log(default_url);
      const currnetElement = e.currentTarget;
      const previewElement = document.getElementById('thumbnail_preview');
      const fileNameElement = document.getElementById('thumbnail_preview_name');
      const selectedfiles = currnetElement.files;

      if (selectedfiles.length === 0) {
        previewElement.src = default_url;
        return;
      }

      for (let i = 0; i < selectedfiles.length; i++) {
        const file = selectedfiles[i];
        const reader = new FileReader();
        reader.onloadend = function() {
          previewElement.src = reader.result;
        };
        reader.readAsDataURL(file);
        fileNameElement.textContent = file.name;
      };
    };
  </script>
<% end %>