version: '3.7'

services:
  app:
    hostname: 'app'
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    working_dir: /app
    init: true
    tty: true
    stdin_open: true
    environment:
      RAILS_ENV: ${RAILS_ENV}
      MYSQL_USERNAME: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_HOST: ${DB_HOST}
      MYSQL_PORT: ${DB_PORT}
    ports:
      - '3001:3001'
    depends_on:
      - mysql
      - redis
    volumes:
      - app-sync:/app
      - bundle:/app/vendor/bundle
      - node_modules:/app/node_modules

  mysql:
    image: 'mysql:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PORT: ${DB_PORT}
      TZ: Asia/Tokyo
    ports:
      - '${DB_PORT}:${DB_PORT}'
    command: --port ${DB_PORT}
    volumes:
      - mysql-data:/var/lib/mysql

  mysql-testing:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${TEST_DB_DATABASE}
      MYSQL_PORT: ${TEST_DB_PORT}
      TZ: Asia/Tokyo
    ports:
      - '${TEST_DB_PORT}:${TEST_DB_PORT}'
    command: --port ${TEST_DB_PORT}

  redis:
    image: "redis:latest"
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: --port ${REDIS_PORT}
    volumes:
      - "redis-data:/data"
    environment:
      TZ: Asia/Tokyo

volumes:
  app-sync:
    external: true
  mysql-data:
  redis-data:
  bundle:
  node_modules: